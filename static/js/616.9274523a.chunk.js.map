{"version":3,"file":"static/js/616.9274523a.chunk.js","mappings":"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","sources":["common/FormControls/FormControls.js","webpack://firstapp/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://firstapp/./src/components/Profile/Posts/MyPosts.module.css?a95a","components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/MyPosts.jsx","components/Profile/Posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileConteiner.jsx","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://firstapp/./src/common/FormControls/FormControls.module.css?d07c"],"sourcesContent":["import styles from './FormControls.module.css'\n\n\nexport const ControlInputText = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error\n\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\n            <div>\n                <props.tag  {...props} {...input}/>\n            </div>\n            <div>\n                {hasError && <span>{meta.error}</span>}\n            </div>\n        </div>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"head\":\"ProfileInfo_head__ngVk7\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\"};","import React, {useEffect, useState} from \"react\";\n\nconst ProfileStatus = (props) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(props.status)\n\n    const activateMethodMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateMethodMode = () => {\n\n        setEditMode(false);\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    useEffect(() => {\n            setStatus(props.status)\n        }, [props.status]\n    )\n\n    return (<div>\n        {!editMode\n            ? <div>\n                <span onDoubleClick={activateMethodMode}>{props.status || 'Задать статус'}</span>\n            </div>\n            : <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMethodMode} value={status} type=\"\"/>\n            </div>\n        }\n    </div>)\n}\n\n\nexport default ProfileStatus;\n","import style from './ProfileInfo.module.css'\nimport user from '../../../assets/images/user.png'\nimport Preloader from \"../../../common/Preloader/Preloader\";\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\n\n\nconst ProfileInfo = (props) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n\n\n    return (\n        <div>\n            <div>\n                <img className={style.head} src=\"https://yahont-hotel.ru/ckeditor_images/chernomorskoje_vid.jpg\" alt=\"\"/>\n            </div>\n            <div className={style.descriptionBlock}>\n                <span><img\n                    src={props.profile.photos.large ? props.profile.photos.large : user}\n                    alt=\"\"/>\n                    <h2>{props.profile.fullName}</h2>\n                                    <div>\n                    <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n                </div>\n                    <h3>Обо мне: {props.profile.aboutMe}</h3>\n                    </span>\n                <span>\n                    <p>contacts:</p>\n                    <ul>\n                        <li>facebook: {props.profile.contacts.facebook ? props.profile.contacts.facebook : 'Не заполнено'}</li>\n                        <li>website: {props.profile.contacts.website ? props.profile.contacts.website : 'Не заполнено'}</li>\n                        <li>vk: {props.profile.contacts.vk ? props.profile.contacts.vk : 'Не заполнено'}</li>\n                        <li>twitter: {props.profile.contacts.twitter ? props.profile.contacts.twitter : 'Не заполнено'}</li>\n                        <li>instagram: {props.profile.contacts.instagram ? props.profile.contacts.instagram : 'Не заполнено'}</li>\n                        <li>youtube: {props.profile.contacts.youtube ? props.profile.contacts.youtube : 'Не заполнено'}</li>\n                        <li>github: {props.profile.contacts.github ? props.profile.contacts.github : 'Не заполнено'}</li>\n                        <li>mainLink: {props.profile.contacts.mainLink ? props.profile.contacts.mainLink : 'Не заполнено'}</li>\n\n                    </ul>\n                    <p>Ищу работу: {props.profile.lookingForAJobDescription ? props.profile.lookingForAJobDescription : 'Не заполнено'}</p>\n                    </span>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__osR5r\",\"postBlock\":\"MyPosts_postBlock__pQ6uD\"};","// extracted by mini-css-extract-plugin\nexport default {};","import s from './Post.module.css'\n\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img className={'ava'}\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQypj29pzM-egDEkWJsvNtRwymMjwR3XOnq3Q&usqp=CAU\"\n                alt=\"\"/>\n            {props.post}\n            <div>\n                <span>like: </span> {props.likesCount}\n            </div>\n        </div>\n    )\n}\n\nexport default Post;\n","import style from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {ControlInputText} from \"../../../common/FormControls/FormControls\";\n\nconst maxLength30 = maxLengthCreator(30)\n\nconst addPostForm = (props) => {\n\n\n    return <form onSubmit={props.handleSubmit}>\n        <Field name={'newPostBody'} component={ControlInputText} tag={'textarea'} placeholder={'Введите текст поста'} validate={[required, maxLength30]}/>\n        <button>Add post </button>\n    </form>\n}\n\nconst MyPosts = React.memo(props => {\n    const postsElement = props.profilePage.posts.map((el) => <Post key={el.id} post={el.post} likesCount={el.likesCount}/>)\n\n\n    const addPost = (value) => {\n        props.addPost(value.newPostBody)\n\n    }\n\n    return (\n\n        <div className={style.postBlock}>\n            <h3>My post</h3>\n            <p>new post</p>\n            <div>\n                <PostReduxForm onSubmit={addPost}/>\n            </div>\n            <div className={style.posts}></div>\n            {postsElement}\n        </div>\n    )\n})\n\nconst PostReduxForm = reduxForm({form: 'postsAddPostForm'})(addPostForm)\n\nexport default MyPosts;\n","import {addPost} from '../../../redux/profile-reducer'\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (textPost) => dispatch(addPost(textPost))\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n","import styles from './Profile.module.css'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./Posts/MyPostsContainer\";\nimport React from \"react\";\n\nconst Profile = (props) => {\n\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer store={props.store}/>\n        </div>\n    )\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {Navigate, redirect, useLocation, useNavigate, useParams} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.router.params.userId\n        if (!userId) {\n            if (this.props.userId){\n                userId = this.props.userId\n            } else {\n                redirect('Login')\n            }\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        if (!this.props.isAuth) return <Navigate to={'/login'}/>\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile}/>\n            </div>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    isAuth: state.auth.isAuth,\n    status: state.profilePage.profileStatus,\n    userId: state.auth.userId\n})\n\nfunction withRouter(Component) {\n\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{location, navigate, params}}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nexport default compose(\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\n    withRouter,\n)(ProfileContainer)\n// export default connect(mapStateToProps,{getProfile})(withRouter(ProfileContainer));\n\n\n","import React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\n\n// const withAuthRedirect = (Component) => {\n//     class RedirectComponent extends React.Component {\n//         render() {\n//             if (this.props.isAuth) {return <Component {...this.props}/>}\n//             return <Navigate to={'/login'}/>\n//         }\n//     }\n//     return connect(mapStateToProps)(RedirectComponent)\n// }\n\nconst withAuthRedirect = (Component) => {\n    const AuthCont = (props) => {\n        if (props.isAuth) {\n            return <Component {...props} />\n        }\n        return <Navigate to={'/login'}/>\n    }\n    return connect(mapStateToProps)(AuthCont)\n}\n\nexport default withAuthRedirect\n\n\n\n\n","export const required = value =>{\n    if (value) return undefined\n    return 'Field is required'\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbol`\n    return undefined\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__CAlX7\",\"error\":\"FormControls_error__Zkh-E\",\"errorMessage\":\"FormControls_errorMessage__feX+V\"};"],"names":["ControlInputText","_ref","input","meta","props","_objectWithoutProperties","_excluded","hasError","touched","error","_jsxs","className","styles","children","_jsx","tag","_objectSpread","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","type","onDoubleClick","profile","style","src","alt","photos","large","user","fullName","ProfileStatus","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJobDescription","Preloader","s","post","likesCount","maxLength30","maxLengthCreator","MyPosts","React","postsElement","profilePage","posts","map","el","Post","id","PostReduxForm","onSubmit","addPost","newPostBody","reduxForm","form","handleSubmit","Field","name","component","placeholder","validate","required","connect","state","dispatch","textPost","ProfileInfo","MyPostsContainer","store","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","router","params","redirect","getProfile","getStatus","isAuth","Profile","Navigate","to","compose","auth","profileStatus","Component","location","useLocation","navigate","useNavigate","useParams","mapStateToProps","maxLength","length","concat"],"sourceRoot":""}