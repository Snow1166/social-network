{"version":3,"file":"static/js/592.4d279012.chunk.js","mappings":"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","sources":["common/FormControls/FormControls.js","webpack://firstapp/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileReduxForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://firstapp/./src/components/Profile/Posts/MyPosts.module.css?a95a","components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/MyPosts.jsx","components/Profile/Posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileConteiner.jsx","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://firstapp/./src/common/FormControls/FormControls.module.css?d07c"],"sourcesContent":["import styles from './FormControls.module.css'\n\n\nexport const ControlInputText = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error\n\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\n            <div>\n                <props.tag  {...props} {...input}/>\n            </div>\n            <div>\n                {hasError && <span>{meta.error}</span>}\n            </div>\n        </div>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"head\":\"ProfileInfo_head__ngVk7\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"customFileInput\":\"ProfileInfo_customFileInput__ZQBFP\",\"contactsMargin\":\"ProfileInfo_contactsMargin__62tW-\",\"errorMessage\":\"ProfileInfo_errorMessage__eSxWY\"};","import React, {useEffect, useState} from \"react\";\n\nconst ProfileStatus = (props) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(props.status)\n\n    const activateMethodMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateMethodMode = () => {\n\n        setEditMode(false);\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    useEffect(() => {\n            setStatus(props.status)\n        }, [props.status]\n    )\n\n    return (<div>\n        {!editMode\n            ? <p><b>Status: </b>\n                <span onDoubleClick={activateMethodMode}>{props.status || 'Задать статус'}</span>\n            </p>\n            : <p><b>Status: </b>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMethodMode} value={status} type=\"\"/>\n            </p>\n        }\n    </div>)\n}\n\n\nexport default ProfileStatus;\n","import React from \"react\";\nimport style from './ProfileInfo.module.css'\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return (\n        <div>\n            <div>\n                {isOwner && <button onClick={goToEditMode}>редактировать профиль</button>}\n            </div>\n            <div>\n                <b>FullName: </b>{profile.fullName}\n            </div>\n            <div>\n                <div>\n                    <b>Looking for a Job: </b> {profile.lookingForAJob ? 'Да' : 'Нет'}\n                </div>\n                <div>\n                    <b>My skills: </b>{profile.lookingForAJobDescription}\n                </div>\n                <div>\n                    <b>About me:</b> {profile.aboutMe}\n                </div>\n            </div>\n            <div>\n                <b>contacts: </b>\n                {Object.keys(profile.contacts).map(key => {\n                    return <Contact className={style.contactsMargin} key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n                })}\n            </div>\n        </div>\n    )\n}\n\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return (\n        <div className={style.contactsMargin} ><b>{contactTitle}: </b>{contactValue}</div>\n    )\n}\n\nexport default ProfileData\n","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport style from './ProfileInfo.module.css'\n\nconst ProfileForm = ({profile, ...props}) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <div className={style.errorMessage}>\n                    {props.error}\n                </div>\n                <div>\n                    <button>сохранить</button>\n                </div>\n                <div>\n                    <b>FullName: </b>\n                    <Field placeholder={'fullName'} name={'fullName'} component={'input'} type={'text'}/>\n                </div>\n                <div>\n                    <b>Looking for a Job: </b>\n                    <Field name={'lookingForAJob'} component={'input'} type={'checkbox'}/>\n                </div>\n\n                <div>\n                    <b>My skills: </b>\n                </div>\n                <Field name={'lookingForAJobDescription'} component={'textarea'} type={'textarea'}/>\n\n                <div>\n                    <b>About me:</b>\n                </div>\n                <Field name={'aboutMe'} component={'textarea'} type={'textarea'}/>\n            </div>\n            <div>\n                <b>contacts: </b>\n                {Object.keys(profile.contacts).map(key => {\n                    return (\n                        <div className={style.contactsMargin} key={key}>\n                            <b>{key}: </b>\n                            <Field name={`contacts.${key}`} component={'input'} type={'text'} placeholder={key}/>\n                        </div>\n                    )\n                })}\n            </div>\n        </form>\n    )\n}\n\nconst ProfileReduxForm = reduxForm({form: 'editProfile'})(ProfileForm)\n\nexport default ProfileReduxForm\n","import style from './ProfileInfo.module.css'\nimport user from '../../../assets/images/user.png'\nimport Preloader from \"../../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport React, {useState} from \"react\";\nimport ProfileData from \"./ProfileData\";\nimport ProfileReduxForm from \"./ProfileReduxForm\";\n\nconst ProfileInfo = ({profile, ...props}) => {\n    const [editMode, setEditMode] = useState(false)\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const sendPhoto = (e) => {\n        let imageFile = e.currentTarget.files[0]\n        props.savePhoto(imageFile)\n    }\n    const onSubmit =  (formData) => {\n         props.saveProfile(formData).then(\n             ()=> {\n             setEditMode(false)\n         })\n    }\n\n    return (\n        <div>\n            <div className={style.descriptionBlock}>\n                <div>\n                    <img src={profile.photos.large || user} alt={''}/>\n                    {props.isOwner &&\n                        <div>\n                            <input className={style.customFileInput} type=\"file\" id='photo' onChange={sendPhoto}/>\n                        </div>\n                    }\n                    <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n                    {editMode\n                        ? <ProfileReduxForm initialValues={profile}\n                                            profile={profile}\n                                            onSubmit={onSubmit}/>\n                        : <ProfileData profile={profile}\n                                       isOwner={props.isOwner}\n                                       goToEditMode={() => setEditMode(true)}/>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default ProfileInfo\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__osR5r\",\"postBlock\":\"MyPosts_postBlock__pQ6uD\"};","// extracted by mini-css-extract-plugin\nexport default {};","import s from './Post.module.css'\n\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img className={'ava'}\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQypj29pzM-egDEkWJsvNtRwymMjwR3XOnq3Q&usqp=CAU\"\n                alt=\"\"/>\n            {props.post}\n            <div>\n                <span>like: </span> {props.likesCount}\n            </div>\n        </div>\n    )\n}\n\nexport default Post;\n","import style from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {ControlInputText} from \"../../../common/FormControls/FormControls\";\n\nconst maxLength30 = maxLengthCreator(30)\n\nconst addPostForm = (props) => {\n\n\n    return <form onSubmit={props.handleSubmit}>\n        <Field name={'newPostBody'} component={ControlInputText} tag={'textarea'} placeholder={'Введите текст поста'} validate={[required, maxLength30]}/>\n        <button>Add post </button>\n    </form>\n}\n\nconst MyPosts = React.memo(props => {\n    const postsElement = props.profilePage.posts.map((el) => <Post key={el.id} post={el.post} likesCount={el.likesCount}/>)\n\n\n    const addPost = (value) => {\n        props.addPost(value.newPostBody)\n\n    }\n\n    return (\n\n        <div className={style.postBlock}>\n            <h3>My post</h3>\n            <p>new post</p>\n            <div>\n                <PostReduxForm onSubmit={addPost}/>\n            </div>\n            <div className={style.posts}></div>\n            {postsElement}\n        </div>\n    )\n})\n\nconst PostReduxForm = reduxForm({form: 'postsAddPostForm'})(addPostForm)\n\nexport default MyPosts;\n","import {addPost} from '../../../redux/profile-reducer'\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (textPost) => dispatch(addPost(textPost))\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n","import styles from './Profile.module.css'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./Posts/MyPostsContainer\";\nimport React from \"react\";\n\nconst Profile = (props) => {\n\n    return (\n        <div>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         updateStatus={props.updateStatus}\n                         isOwner={props.isOwner}\n                         savePhoto={props.savePhoto}\n                         saveProfile={props.saveProfile}\n                         userId={props.userId}/>\n            <MyPostsContainer store={props.store}/>\n        </div>\n    )\n};\n\nexport default Profile;\n","import React, {useEffect} from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {Navigate, redirect, useParams} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\n\nconst ProfileContainer = ({userId, ...props}) => {\n    const params = useParams()\n    const isOwner = String(userId) === params.userId\n\n    useEffect(() => {\n        let currentUserId = params.userId\n        if (!currentUserId) {\n            if (userId) {\n                currentUserId = userId\n            } else {\n                redirect('Login')\n            }\n        }\n        props.getProfile(currentUserId)\n        props.getStatus(currentUserId)\n    }, [params.userId])\n\n\n    if (!props.isAuth) return <Navigate to={'/login'}/>\n    return (\n        <div>\n            <Profile {...props} userId={userId} profile={props.profile} isOwner={isOwner} saveProfile={props.saveProfile}/>\n        </div>\n    )\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    isAuth: state.auth.isAuth,\n    status: state.profilePage.profileStatus,\n    userId: state.auth.userId\n})\n\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n)(ProfileContainer)\n// export default connect(mapStateToProps,{getProfile})(withRouter(ProfileContainer));\n\n\n","import React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\n\n// const withAuthRedirect = (Component) => {\n//     class RedirectComponent extends React.Component {\n//         render() {\n//             if (this.props.isAuth) {return <Component {...this.props}/>}\n//             return <Navigate to={'/login'}/>\n//         }\n//     }\n//     return connect(mapStateToProps)(RedirectComponent)\n// }\n\nconst withAuthRedirect = (Component) => {\n    const AuthCont = (props) => {\n        if (props.isAuth) {\n            return <Component {...props} />\n        }\n        return <Navigate to={'/login'}/>\n    }\n    return connect(mapStateToProps)(AuthCont)\n}\n\nexport default withAuthRedirect\n\n\n\n\n","export const required = value =>{\n    if (value) return undefined\n    return 'Field is required'\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbol`\n    return undefined\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__CAlX7\",\"error\":\"FormControls_error__Zkh-E\",\"errorMessage\":\"FormControls_errorMessage__feX+V\"};"],"names":["ControlInputText","_ref","input","meta","props","_objectWithoutProperties","_excluded","hasError","touched","error","_jsxs","className","styles","children","_jsx","tag","_objectSpread","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","type","onDoubleClick","Contact","_ref2","contactTitle","contactValue","style","profile","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","concat","Preloader","src","photos","large","user","alt","id","imageFile","files","savePhoto","ProfileStatus","ProfileReduxForm","initialValues","formData","saveProfile","then","ProfileData","s","post","likesCount","maxLength30","maxLengthCreator","MyPosts","React","postsElement","profilePage","posts","el","Post","PostReduxForm","addPost","newPostBody","validate","required","connect","state","dispatch","textPost","ProfileInfo","userId","MyPostsContainer","store","compose","withAuthRedirect","isAuth","auth","profileStatus","getProfile","getStatus","params","useParams","String","currentUserId","redirect","Profile","Navigate","to","mapStateToProps","Component","maxLength","length"],"sourceRoot":""}